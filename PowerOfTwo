//
Power of 2
Difficulty: EasyAccuracy: 32.58%Submissions: 398K+Points: 2
Given a non-negative integer n. The task is to check if it is a power of 2. 

Examples

Input: n = 8
Output: true
Explanation: 8 is equal to 2 raised to 3 (23 = 8).
Input: n = 98
Output: false
Explanation: 98 cannot be obtained by any power of 2.
Input: n = 1
Output: true
Explanation: (20 = 1).
Expected Time Complexity: O(log n).
Expected Auxiliary Space: O(1).

Constraints:
0 â‰¤ n < 1020
Code:

class Solution {

    // Function to check if given number n is a power of two.
    public static boolean isPowerofTwo(long n) {
      
      /*if (n<=0){
          return false;
      }
      
      return (n&(n-1))==0;
      */
      
      
      if(n<=0) return false;
      
      while(n>1){
          
          if(n%2!=0){
              return false;
              
          }
          n=n/2;
      }
      return true;
       
    }
}

//
//
