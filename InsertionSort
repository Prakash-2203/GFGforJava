//

Insertion Sort
Difficulty: EasyAccuracy: 66.61%Submissions: 169K+Points: 2
The task is to complete the insert() function which is used to implement Insertion Sort.


Examples:

Input: n = 5, arr[] = { 4, 1, 3, 9, 7}
Output: 1 3 4 7 9
Input: n = 10, arr[] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1}
Output: 1 2 3 4 5 6 7 8 9 10

Your Task: 
You don't have to read input or print anything. Your task is to complete the function insert() and insertionSort() where insert() takes the array, it's size and an index i and insertionSort() uses insert function to sort the array in ascending order using insertion sort algorithm. 

Expected Time Complexity: O(n*n).
Expected Auxiliary Space: O(1).


Constraints:
1 <= n <= 1000
1 <= arr[i] <= 1000


Code:

class Solution
{
  static void insert(int arr[],int i)
  {
       // Your code here
       
       for(int j=i;j>0;j--){
           
           if(arr[j]<arr[j-1]){
               int temp = arr[j];
               arr[j]= arr[j-1];
               arr[j-1] = temp;
           }
       }
       
       
  }
  //Function to sort the array using insertion sort algorithm.
  public void insertionSort(int arr[], int n)
  {
      for(int i=1;i<n;i++){
          
          insert(arr,i);
      }
      
      
  }
}
//
//

